{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","FeedbackOptions","this","props","options","onLeaveFeedback","map","option","onClick","className","s","button","Component","Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","statisticList","Notification","message","App","state","handleIncrement","setState","prevState","Object","values","reduce","acc","value","countTotalFeedback","percentage","Math","round","stateName","keys","percent","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,cAAgB,oC,+LCG5BC,E,4JACJ,WACE,MAAqCC,KAAKC,MAAlCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,gBACjB,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBAEEC,QAAS,kBAAMH,EAAgBE,IAC/BE,UAAWC,IAAEC,OAHf,SAKGJ,GAJIA,Y,GAPaK,aAsBfX,ICtBTY,E,4JACJ,WACE,MAA4BX,KAAKC,MAAzBW,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACf,OACE,oCACE,6BAAKD,IACJC,S,GANaH,aAePC,I,iBCfTG,E,4JACJ,WACE,MAA0Dd,KAAKC,MAAvDc,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,mBACnC,OACE,qBAAIZ,UAAWC,IAAEY,cAAjB,UACE,wCAAWL,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,c,GATiBT,aAqBVI,ICtBTO,E,4JACJ,WACE,IAAQC,EAAYtB,KAAKC,MAAjBqB,QACR,OAAO,4BAAIA,Q,GAHYZ,aASZW,ICLTE,E,4MACJC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,gBAAkB,SAAApB,GAChB,EAAKqB,UAAS,SAAAC,GACZ,OAAO,eAAGtB,EAASsB,EAAUtB,GAAU,O,wDAI3C,WAEE,OADmBuB,OAAOC,OAAO7B,KAAKwB,OACpBM,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,O,6CAGjD,WACE,IAAMA,EAAQhC,KAAKiC,qBACbC,EAAaC,KAAKC,MAAOpC,KAAKwB,MAAMT,KAAOiB,EAAS,KAE1D,OAAKE,GAAmB,I,oBAI1B,WACE,IAAMG,EAAYT,OAAOU,KAAKtC,KAAKwB,OACnC,EAA+BxB,KAAKwB,MAA5BT,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBe,EAAQhC,KAAKiC,qBACbM,EAAUvC,KAAKwC,kCAErB,OACE,sBAAKjC,UAAU,MAAf,UACE,cAAC,EAAD,CAASK,MAAM,wBAAf,SACE,cAAC,EAAD,CACEV,QAASmC,EACTlC,gBAAiBH,KAAKyB,oBAG1B,cAAC,EAAD,CAASb,MAAM,aAAf,SACa,IAAVoB,EACC,cAAC,EAAD,CAAcV,QAAQ,sBAEtB,cAAC,EAAD,CACEP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,EACPb,mBAAoBoB,a,GAjDhB7B,aA0DHa,IC5DfkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BhD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.5dbcd4e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticList\":\"Statistics_statisticList__6JgGa\"};","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport s from '../FeedbackOptions/FeedbackOptions.module.css';\n\nclass FeedbackOptions extends Component {\n  render() {\n    const { options, onLeaveFeedback } = this.props;\n    return (\n      <div>\n        {options.map(option => (\n          <button\n            key={option}\n            onClick={() => onLeaveFeedback(option)}\n            className={s.button}\n          >\n            {option}\n          </button>\n        ))}\n      </div>\n    );\n  }\n}\nFeedbackOptions.propTypes = {\n  options: PropTypes.array,\n  onLeaveFeedback: PropTypes.func,\n};\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n// import s from '../Section/Section.module.css';\n\nclass Section extends Component {\n  render() {\n    const { title, children } = this.props;\n    return (\n      <section>\n        <h2>{title}</h2>\n        {children}\n      </section>\n    );\n  }\n}\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\nexport default Section;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport s from '../Statistics/Statistics.module.css';\n\nclass Statistics extends Component {\n  render() {\n    const { good, neutral, bad, total, positivePercentage } = this.props;\n    return (\n      <ul className={s.statisticList}>\n        <li>Good: {good}</li>\n        <li>Neutral: {neutral}</li>\n        <li>Bad: {bad}</li>\n        <li>Total: {total}</li>\n        <li>Positive feedback: {positivePercentage}%</li>\n      </ul>\n    );\n  }\n}\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nclass Notification extends Component {\n  render() {\n    const { message } = this.props;\n    return <p>{message}</p>;\n  }\n}\nNotification.propTypes = {\n  message: PropTypes.string,\n};\nexport default Notification;\n","import { Component } from 'react';\nimport './App.css';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = option => {\n    this.setState(prevState => {\n      return { [option]: prevState[option] + 1 };\n    });\n  };\n\n  countTotalFeedback() {\n    const totalValue = Object.values(this.state);\n    return totalValue.reduce((acc, value) => acc + value);\n  }\n\n  countPositiveFeedbackPercentage() {\n    const value = this.countTotalFeedback();\n    const percentage = Math.round((this.state.good / value) * 100);\n\n    if (!percentage) return 0;\n    return percentage;\n  }\n\n  render() {\n    const stateName = Object.keys(this.state);\n    const { good, neutral, bad } = this.state;\n    const value = this.countTotalFeedback();\n    const percent = this.countPositiveFeedbackPercentage();\n\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={stateName}\n            onLeaveFeedback={this.handleIncrement}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {value === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={value}\n              positivePercentage={percent}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2hziz\"};"],"sourceRoot":""}